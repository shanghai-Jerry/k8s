# Name-Based Virtual Hosting
apiVersion: networking.k8s.io/v1 
kind: Ingress
metadata:
  annotations:
    # 需要启用ingress插件
    # minikube addons enable ingress 
    kubernetes.io/ingress.class: "nginx"  # using nginx ingress controller
  name: virtual-host-ingress
  namespace: default
spec:
  # 路由规则： 域名 + path -> 指定svc + 端口
  rules:
  - host: blue.example.com # 指定域名
    http:
      paths:
      - backend: # backend service
          service:
            name: webserver-blue-svc
            port:
              number: 80
        path: /  # path
        pathType: ImplementationSpecific
  - host: green.example.com
    http:
      paths:
      - backend:
          service:
            name: webserver-green-svc
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  # This section is only required if TLS is to be enabled for the Ingress
  # If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:
  tls:
  - hosts:
    - blue.example.com
  secretName: example-tls  
---
# If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:
apiVersion: v1
kind: Secret
metadata:
    name: example-tls
namespace: ingress-controller
data:
  tls.crt: 
  tls.key:
type: kubernetes.io/tls
---
# Fanout routing
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
  name: fan-out-ingress
  namespace: default
spec:
  rules:
  - host: example.com
    http:
      paths:
      - path: /blue
        backend:
          service:
            name: webserver-blue-svc
            port:
              number: 80
        pathType: ImplementationSpecific
      - path: /green
        backend:
          service:
            name: webserver-green-svc
            port:
              number: 80
        pathType: ImplementationSpecific